# Kruskal Wallis Test {#kwt}

The Kruskal-Wallis test is a **non-parametric (**distribution free**)** statistical test used to compare the medians of two or more independent groups when the data is not normally distributed or the assumptions of a **one-way ANOVA** are violated. It's essentially a non-parametric equivalent of a one-way ANOVA, but instead of comparing means, it compares medians. It is named after **William Kruskal and W. Allen Wallis**, who developed it in 1952.

In the Kruskal Wallis test, it is enough for the data to be in the form of ordinal variables, which means values that can be ranked or ordered. This is because the test does not use the actual differences between the values. Unlike ANOVA, which compares group means using real quantitative values and assumes normal distribution and equal variances, the Kruskal Wallis test works by converting all observations into ranks and then checking how these ranks are distributed across the groups. This makes the Kruskal Wallis test suitable for situations where the data are not normally distributed or where the measurements are not precise but can still be ordered in a meaningful way. In the illustration in @fig-anvakwt, you can see ANOVA uses the actual data values, while the Kruskal Wallis test replaces them with their ranks to see if the groups are significantly different.

![Comparison between ANOVA (means) and Kruskal Wallis test (ranks)](images/kwt/Difference_between_ANOVA_and_KW_test.png){#fig-anvakwt fig-align="center" width="558"}

![When to use kruskal wallis test](images/kwt/when_kruskal.png){#fig-akwt fig-align="center" width="100%"}

## Example {#example-scenario}

::: callout-note
### Study Context

1.  A food scientist is evaluating four drink flavours (V1 to V4) based on consumer ratings for five sensory attributes: Appearance, Color, Texture, Taste, and Flavour. Each flavour is rated by five judges, giving five replications per group. A separate Kruskal Wallis test can be performed for each sensory attribute to check if there are significant differences in ratings among the flavours.

2.  An agricultural extension researcher is evaluating the effectiveness of four training methods (T1 to T4) based on farmers' knowledge gain. Each method is tested on five farmers, and their knowledge is scored after the training. These scores serve as replications. The Kruskal Wallis test can be used to determine if there is a significant difference in knowledge gain among the four training methods.

3.  An agricultural extension researcher is comparing four different communication approaches (C1 to C4) for delivering farm advisories. Each method is tested on 10 farmers, who rate the clarity of the information received. These clarity scores serve as replications. The Kruskal Wallis test can be applied to determine whether there are significant differences in perceived clarity among the four communication methods.
:::

## Assumptions

The Kruskal-Wallis test relies on the following assumptions:

-   **Non-parametric**: It does not assume a normal distribution of the data, making it suitable for non-normally distributed data

-   **Independence of Observations**: Each sample should be independent of the others, meaning there is no relationship or dependence between the observations within or across group

-   **Ordinal or Continuous Data**: The data should be ordinal, meaning it can be ranked, or continuous.

<details>

<summary>Key Features of Kruskal-Wallis Test</summary>

-   **Non-parametric**: Unlike ANOVA, it does not assume normality or equal variances, making it suitable for non-normal data.
-   **Extension of the Mann-Whitney U test**: It is essentially an extension of the Mann-Whitney U test, designed for more than two independent samples.
-   **Ranking-based**: Like the Mann-Whitney U test, the Kruskal-Wallis test relies on ranking the data rather than using raw values.
-   **Test statistic**: The test calculates a statistic based on the ranked data to determine if significant differences exist between the groups.

</details>

## Hypotheses

The Kruskal-Wallis test evaluates the following hypotheses:

::: {.callout-note title="Null Hypothesis (H₀)"}
The population medians of all groups are equal.
:::

::: {.callout-note title="Alternative Hypothesis (H₁)"}
At least one population median is different from the others.
:::

<details>

<summary>Steps in Kruskal-Wallis Test</summary>

-   Step one: Sort and assign ranks to the data

-   Step two: Add up the ranks for each group

-   Step three: Calculate the H statistic

-   Step four: Obtain and interpret the p-value

## The Test Statistic

The Kruskal-Wallis test statistic is calculated using the @eq-kwt1

::: {.callout-tip title="Use this for Kruskal-Wallis Test"}
$$
\Large H = \frac{12}{N(N+1)} \sum_{i=1}^{k} \frac{R_i^2}{n_i} - 3(N+1)
$$ {#eq-kwt1}
:::

Where:

-   $N$ is the total number of observations across all groups.
-   $k$ is the number of groups.
-   $n_i$ is the number of observations in group $i$.
-   $R_i$ is the sum of ranks for group $i$.

When there are no ties in the data, $H$ follows a chi-square distribution with $k-1$ degrees of freedom. When ties exist, a correction factor given in the @eq-kwt2 is applied.

## Correction for Ties

If there are tied values in the dataset, the test statistic is adjusted using:

::: {.callout-tip title="Use this for Kruskal-Wallis Test"}
$$
\Large H_{corrected} = \frac{H}{1 - \frac{\sum_{i=1}^{G} (t_i^3 - t_i)}{N^3 - N}}
$$ {#eq-kwt2}
:::

Where:

-   $G$ is the number of groups of tied ranks.
-   $t_i$ is the number of tied values in the $i$-th group.

## Interpreting the Results

The test statistic H approximately follows a chi-square distribution with k - 1 degrees of freedom, where k is the number of groups. To determine if the null hypothesis can be rejected, the H test value is compared to an H critical value obtained from a chi-square table by cross reference the degrees of freedom (df), with the level of significance (ɑ). If H exceeds the critical value, reject the null hypothesis

If you reject the null hypothesis, you can conclude that at least one group is significantly different from the others and proceed for multiple comparison tests.When the Kruskal-Wallis test shows a significant difference, it does not provide information about which specific pairs of groups are different. This is where post-hoc tests, like the Dunn test, become essential. They perform pairwise comparisons to identify exactly which groups differ, addressing the limitation of the Kruskal-Wallis test.

## Multiple Comparison Test

When the Kruskal-Wallis test is significant, the following post hoc tests are commonly used for pairwise comparisons:

::::: {style="display: flex; gap: 2em;"}
::: dunn-box
**Dunn's Test**\
-The Dunn test is a post-hoc statistical procedure used in conjunction with the Kruskal-Wallis test.\
-Used to determine which specific groups differ when the Kruskal-Wallis test indicates a significant difference among multiple groups.\
:::

::: lsd-box
**LSD (Least Significant Difference) Test**\
- Fisher’s LSD test is primarily used as a post-hoc test after a significant ANOVA (Analysis of Variance), which is a parametric test.\
:::
:::::

Dunn test is the recommended and standard approach due to its alignment with non-parametric assumptions and its ability to handle multiple comparisons appropriately. The LSD test is not suitable in this context because it relies on parametric assumptions that are typically violated when Kruskal-Wallis is used.

## P Adjustment Method {#p-adjustment}

In statistical hypothesis testing, p-values indicate the probability of observing results at least as extreme as those observed, assuming the null hypothesis is true. When multiple tests are conducted, the risk of false positives (Type I errors) increases. P-value adjustment methods address this issue by controlling the overall error rate, ensuring reliable inference in multiple testing scenarios.

You can select different p-adjustment methods:

-   [Bonferroni](https://en.wikipedia.org/wiki/Bonferroni_correction)
-   [Holm](https://en.wikipedia.org/wiki/Holm%E2%80%93Bonferroni_method)
-   [Hommel](https://en.wikipedia.org/wiki/Multiple_testing_correction#Hommel)
-   [Benjamini-Hochberg Procedure (BH)](https://en.wikipedia.org/wiki/False_discovery_rate#Benjamini%E2%80%93Hochberg_procedure)
-   [Benjamini-Yekutieli Procedure (BY)](https://en.wikipedia.org/wiki/False_discovery_rate#Benjamini%E2%80%93Yekutieli_procedure)
-   [False Discovery Rate (q-value) Approach](https://en.wikipedia.org/wiki/False_discovery_rate)

## KRUSKAL WALLIS TEST IN [RAISINS]{style="color:red;"}

RAISINS is an innovative online platform designed to simplify data analysis for agricultural research, developed by STATOBERRY LLP. RAISINS provide you a comprehensive environment where you can perform KRUSKAL WALLIS test. Before proceeding further, Create an account in [RAISINS](https://www.raisins.live) Once created, login with the credentials and explore.

### Log In to RAISINS

![](images/kwt/login.png)

Head to [www.raisins.live](https://www.raisins.live) and sign in to your account. If you don’t have one, create an account faster than you can say non-parametric!

Once logged in, we need a structured data for the analysis. For that create a data of your own following the prescribed format given in **RAISINS.** So lets create a data first !

### DATASET

You can download the model datasets from the dataset tab in the **RAISINS** and create your own uisng the microsoft excel following the structure given in the model datasets and save them as csv file for further analysis

![](images/kwt/DATASET.png)

<details>

<summary>Dataset Creation Rules</summary>

1.  **Column Naming Convention**
    -   No spaces allowed in column names.\
    -   Use underscores (`_`) or full stops (`.`) for separation.
2.  **Data Arrangement**
    -   Align data towards the upper-left corner.\
    -   Ensure the row above the data is not blank.
3.  **Cell Management**
    -   Avoid typing or deleting in cells without data.\
    -   If needed, select affected cells, right-click, and select **Clear Contents**.
4.  **Column Relevance**
    -   Name all columns meaningfully.\
    -   Exclude unnecessary columns not required for analysis.

</details>

::: {.callout-tip title="Note"}
Once all these are done, your file is ready. Now save it as CSV file. Upload file by clicking browse in the app
:::

### Create dataset in RAISINS

**RAISINS** application lets you generate a raisins dataset directly within its interface. Here's how: Open **RAISINS** ➡️Select **KRUSKAL WALLIS TEST** ➡️Navigate to the **Create Data** Tab➡️ Select the number of **Treatments** ➡️ Select number of **replications**➡️Click on **Create**

![](images/kwt/create_data.png){width="1011"}

::: {.callout-tip title="Note"}
**Using the create data option in RAISINS, a model dataset will be created. Now you may enter the observations manually into the csv file once downloaded, or paste the observations straight into the file provided. Once the data is ready, you are all set to perform KRUSKAL WALLIS TEST. Now browse and upload the file and Click Run Analysis**
:::

## Results

![](images/kwt/result_table.png){fig-align="center" width="703"}

::: {.content}
<details>
<summary>Results Table</summary>
This is the result table that will be generated after the analysis, which contains Mean ± SD of each observed characters, Chi-square values and p-values showing test significance. RAISINS offers you downloadable results table in pdf and word format which can be used for your future research and thesis.
</details>
:::

## Customizable plots

```{=html}
<script>
// Hide all descriptions on page load
document.addEventListener('DOMContentLoaded', function() {
  const descriptions = document.querySelectorAll('.plot-description');
  descriptions.forEach(desc => {
    desc.style.display = 'none';
    console.log('Hiding on load: ' + desc.id); // Debug log
  });
});

function showDescription(id) {
  console.log('Showing description: ' + id); // Debug log
  document.getElementById(id).style.display = 'flex';
}

function hideDescription(id) {
  console.log('Hiding description: ' + id); // Debug log
  document.getElementById(id).style.display = 'none';
}
</script>
```

```{=html}
<style>
.plot-container {
  position: relative;
  display: inline-block;
  cursor: pointer;
  width: 400px; /* Fixed width for container */
  height: 300px; /* Fixed height for container */
  overflow: hidden; /* Ensure content fits within container */
  margin: 10px; /* Add margin to prevent overlap */
}

.plot-container img {
  width: 400px; /* Fixed image width */
  height: 300px; /* Fixed image height */
  object-fit: cover; /* Scale image to cover container */
  border: 3px solid #ddd;
  border-radius: 8px;
  transition: transform 0.3s ease, box-shadow 0.3s ease;
}

.plot-container:hover img {
  transform: scale(1.05);
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
}

.plot-description {
  display: none !important; /* Ensure hidden by default */
  position: absolute;
  top: 0;
  left: 0;
  width: 100%; /* Cover full image width */
  height: 100%; /* Cover full image height */
  z-index: 1000; /* Ensure description is above image */
  background: linear-gradient(135deg, rgba(255, 107, 107, 0.8), rgba(255, 142, 83, 0.8)); /* Semi-transparent gradient */
  color: white;
  padding: 15px;
  border-radius: 8px;
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.3);
  font-size: 14px;
  line-height: 1.5;
  display: flex; /* Center text */
  align-items: center; /* Vertical center */
  justify-content: center; /* Horizontal center */
  text-align: center;
  animation: fadeIn 0.3s ease-in;
  pointer-events: none; /* Prevent description from blocking hover */
  border: 2px solid rgba(255, 255, 255, 0.5); /* Visible border for debugging */
}

.plot-container:hover .plot-description {
  display: flex !important; /* Force visibility on hover, using flex for centering */
}

@keyframes fadeIn {
  from { opacity: 0; transform: scale(0.95); }
  to { opacity: 1; transform: scale(1); }
}

/* Unique background gradients for each plot description */
#boxplot-desc { background: linear-gradient(135deg, rgba(255, 107, 107, 0.8), rgba(255, 142, 83, 0.8)); }
#pairsplot-desc { background: linear-gradient(135deg, rgba(79, 172, 254, 0.8), rgba(0, 242, 254, 0.8)); }
#barplot-desc { background: linear-gradient(135deg, rgba(161, 140, 209, 0.8), rgba(251, 194, 235, 0.8)); }
#connectedplot-desc { background: linear-gradient(135deg, rgba(0, 221, 235, 0.8), rgba(38, 166, 154, 0.8)); }
#meanvalueplot-desc { background: linear-gradient(135deg, rgba(255, 154, 139, 0.8), rgba(255, 106, 136, 0.8)); }
#violinplot-desc { background: linear-gradient(135deg, rgba(132, 250, 176, 0.8), rgba(143, 211, 244, 0.8)); }
</style>
```

::::::::::::::::::::: grid
::::: g-col-6
:::: {.plot-container onmouseover="showDescription('boxplot-desc')" onmouseout="hideDescription('boxplot-desc')"}
![Box plot](images/kwt/box.png){fallback="https://via.placeholder.com/400x300?text=Box+Plot"}

::: {#boxplot-desc .plot-description}
A **box plot** displays the distribution of data with a five-number summary: minimum, Q1, median, Q3, and maximum. It vividly highlights central tendencies, variability, and outliers with a splash of clarity!
:::
::::
:::::

::::: g-col-6
:::: {.plot-container onmouseover="showDescription('pairsplot-desc')" onmouseout="hideDescription('pairsplot-desc')"}
![Pairs plot](images/kwt/corr.png){fallback="https://via.placeholder.com/400x300?text=Pairs+Plot"}

::: {#pairsplot-desc .plot-description}
A correlation plot, often called a correlation matrix or heatmap, is a visual tool used to display the correlation coefficients between multiple variables in a dataset
:::
::::
:::::

::::: g-col-6
:::: {.plot-container onmouseover="showDescription('barplot-desc')" onmouseout="hideDescription('barplot-desc')"}
![Bar plot](images/kwt/bar.png){fallback="https://via.placeholder.com/400x300?text=Bar+Plot"}

::: {#barplot-desc .plot-description}
A **bar plot** paints categorical data with vibrant bars, their heights dancing to the tune of values or frequencies, perfect for comparing categories with flair.
:::
::::
:::::

::::: g-col-6
:::: {.plot-container onmouseover="showDescription('connectedplot-desc')" onmouseout="hideDescription('connectedplot-desc')"}
![Connected plot](images/kwt/Connected.png){fallback="https://via.placeholder.com/400x300?text=Connected+Plot"}

::: {#connectedplot-desc .plot-description}
A **connected plot** links data points with flowing lines, tracing trends across time or other variables with a dynamic, storytelling vibe.
:::
::::
:::::

::::: g-col-6
:::: {.plot-container onmouseover="showDescription('meanvalueplot-desc')" onmouseout="hideDescription('meanvalueplot-desc')"}
![Mean Value Plot](images/kwt/mean.png){fallback="https://via.placeholder.com/400x300?text=Mean+Value+Plot"}

::: {#meanvalueplot-desc .plot-description}
A **mean value plot** shines a spotlight on group averages, with error bars adding a touch of drama to show variability or confidence intervals across categories.
:::
::::
:::::

::::: g-col-6
:::: {.plot-container onmouseover="showDescription('violinplot-desc')" onmouseout="hideDescription('violinplot-desc')"}
![Violin plot](images/kwt/violin.png){fallback="https://via.placeholder.com/400x300?text=Violin+Plot"}

::: {#violinplot-desc .plot-description}
A **violin plot** blends a box plot’s structure with a density plot’s elegance, its curves swaying to reveal data distribution and density with vibrant charm.
:::
::::
:::::
:::::::::::::::::::::

## Multivariate and AI

The Kruskal-Wallis test is usually used to compare one variable across several groups. It’s a non-parametric test, which means it doesn’t assume the data follows a normal distribution.Now, imagine you have more than one variable (for example, height and weight), and you still want to compare these across different groups. Multivariate analysis in KRUSKAL WALLIS test helps you to compare different characters simultaneously !

***"Don't worry RAISIN will guide you to perform Multivariate analysis ! "***

**RAISINS** is equipped with an **AI-powered interpretation feature** designed to assist users in comprehending the outcomes of statistical tests and data analysis. This functionality provides clear and concise summaries of analytical results, identifies statistically significant differences between groups, and offers informed suggestions for potential next steps or interpretations.

RAISINS enables users to draw meaningful conclusions without requiring advanced expertise in statistics.

## FAQ's

Detailed instruction on how to use the app is available under the FAQ's section!

## User

User details including usage percentage and other billing details is available in the **USER** tab
